import { describe, test } from "vitest";
import { Board } from "../src/Board";
import { setupFallingShape } from "./testUtils";
import { Tetromino } from "../src/Tetromino";
import { expect } from "chai";

describe("Line clear is ", () => {
    test("performed when the falling piece stops on the bottom", () => {
        let board = Board.fromString(
            `
        ..........    
        ..........    
        ..........    
        ..........    
        ..........    
        ZZZ...ZZZZ    
        `
        );
        board = setupFallingShape(board, Tetromino.ARIKA_T.rotateLeft().rotateLeft(), 2, 3);

        expect(board.toString(), "Incorrect setup").to.equalShape(
            `
        ..........    
        ..........    
        ..........    
        ....T.....    
        ...TTT....    
        ZZZ...ZZZZ    
        `
        );

        board.tick();

        expect(board.toString(), "First tick").to.equalShape(
            `
        ..........    
        ..........    
        ..........    
        ..........    
        ....T.....    
        ZZZTTTZZZZ    
        `
        );

        board.tick();

        expect(board.toString(), "Line clear failed").to.equalShape(
            `
        ..........    
        ..........    
        ..........    
        ..........    
        ..........    
        ....T.....       
        `
        );
    });

    test("performed when the falling piece stops on other pieces", () => {
        let board = Board.fromString(
            `
        ..........    
        ..........    
        ..........    
        ..........    
        ZZZ...ZZZZ    
        ZZZ.Z.ZZZZ    
        `
        );
        board = setupFallingShape(board, Tetromino.ARIKA_T.rotateLeft().rotateLeft(), 1, 3);

        expect(board.toString(), "Incorrect setup").to.equalShape(
            `
        ..........    
        ..........    
        ....T.....    
        ...TTT....    
        ZZZ...ZZZZ    
        ZZZ.Z.ZZZZ    
        `
        );

        board.tick();

        expect(board.toString(), "First tick").to.equalShape(
            `
        ..........    
        ..........    
        ..........    
        ....T.....    
        ZZZTTTZZZZ    
        ZZZ.Z.ZZZZ    
        `
        );

        board.tick();

        expect(board.toString(), "Line clear failed").to.equalShape(
            `
        ..........    
        ..........    
        ..........    
        ..........    
        ....T.....    
        ZZZ.Z.ZZZZ    
        `
        );

        board.tick();
    });

    test("not performed when the piece is still moving", () => {
        let board = Board.fromString(
            `
        ..........    
        ..........    
        ..........    
        ..........    
        ZZZ...ZZZZ    
        ZZZ...ZZZZ    
        `
        );
        board = setupFallingShape(board, Tetromino.ARIKA_T.rotateLeft().rotateLeft(), 1, 3);

        expect(board.toString(), "Incorrect setup").to.equalShape(
            `
        ..........    
        ..........    
        ....T.....    
        ...TTT....    
        ZZZ...ZZZZ    
        ZZZ...ZZZZ    
        `
        );

        board.tick();

        expect(board.toString(), "First tick").to.equalShape(
            `
        ..........    
        ..........    
        ..........    
        ....T.....    
        ZZZTTTZZZZ    
        ZZZ...ZZZZ    
        `
        );

        board.tick();

        expect(board.toString(), "First tick").to.equalShape(
            `
        ..........    
        ..........    
        ..........    
        ..........    
        ZZZ.T.ZZZZ    
        ZZZTTTZZZZ    
        `
        );
    });
});
